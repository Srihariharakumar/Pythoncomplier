{
  "python": {
    "1": "Generate first 10 prime numbers",
    "2": "What is the purpose of the pass statement in Python?",
    "3": "Explain the purpose of the lambda function in Python with an example.",
    "4": "How does the swapcase function work in Python? Provide an example.",
    "5": "Differentiate between a shallow copy and a deep copy in Python.",
    "6": "List three differences between a List and a Tuple in Python.",
    "7": "What is the significance of the _init_ method in a Python class?",
    "8": "Write a Python script that checks if a given number is prime.",
    "9": "Create a Python program that checks if a given sequence is a Palindrome.",
    "10": "How do you calculate the factorial value of a number in Python?",
    "11": "Write Python code to reverse a given list: [23, 12, 5, 24, 23, 76, 86, 24, 86, 24, 75].",
    "12": "Explain the difference between the split and join methods in Python.",
    "13": "Name two mutable and two immutable data types in Python.",
    "14": "Provide examples and explanations of common list, tuple, and set functions in Python.",
    "15": "Write a Python code to swap the values of two elements in a list.",
    "16": "Use list comprehension to select only odd numbers from a given list.",
    "17": "What are global and local variables in Python? Provide examples.",
    "18": "How do you create a class in Python? Provide an example.",
    "19": "How do you access parent members in a child class in Python? Explain the use of super().",
    "20": "Inheritance in the context of object-oriented programming (OOP).",
    "21": "Explain the concepts of a subclass and superclass in Python.",
    "22": "List and explain the main features of Object-Oriented Programming (OOP).",
    "23": "Exception handling in Python?",
    "24": "Write a code example to demonstrate how classes are created and methods are called in Python.",
    "25": "Provide an example of multiple inheritance in Python.",
    "26": "How can you generate random numbers in Python?",
    "27": "Create your own dataset using pandas methods and demonstrate operations like drop, dataframe creation, and handling null values.",
    "28": "Explain the significance of the @ symbol in OOPs.",
    "29": "Create an Employee class with instance variables name and age.",
    "30": "Explain the purpose of getters and setters methods in a class.",
    "31": "Create a Thread using Python and explain its purpose.",
    "32": "List and explain some commonly used Thread methods in Python. Mention the scheduler class and its build function.",
    "33": "Create a DataFrame in pandas, select any two rows and two columns, and find the largest values from any columns.",
    "34": "Create a class Vehicle and make child classes: Car, Boat, and Plane.",
    "35": "Explain recursion in Python. Provide an example.",
    "36": "Write a Python function to calculate the factorial of a number using recursion.",
    "37": "What is an Armstrong number? Write a Python function to check if a given number is an Armstrong number.",
    "38": "How do you determine if a year is a leap year in Python?",
    "39": "Write a Python function to convert a list to a dictionary.",
    "40": "Write a Python function to convert a dictionary to a list.",
    "41": "Create a DataFrame in pandas using the from_dict function.",
    "42": "What is a decorator in Python? Provide an example.",
    "43": "Explain the following Object-Oriented Programming (OOP) concepts: encapsulation, polymorphism, and abstraction.",
    "44": "Define a neon number. Write a Python function to check if a given number is a neon number.",
    "45": "Write a Python function to find the largest value in a list.",
    "46": "Write a Python function to reverse a string.",
    "47": "Explain the concept of a lambda function in Python.",
    "48": "Write a Python function to remove duplicate values from a list.",
    "49": "What is a Palindrome? Write a Python function to check if a given string is a Palindrome.",
    "50": "How can you handle exceptions in Python? Provide examples.",
    "51": "Write a Python function to find the square root of a number.",
    "52": "Write a Python program to find the common elements between two lists.",
    "53": "Explain the concept of a generator in Python. Provide an example.",
    "54": "Write a Python function to check if a number is a prime number using the Sieve of Eratosthenes algorithm.",
    "55": "Explain the purpose of the enumerate function in Python.",
    "56": "Write a Python program to calculate the sum of digits in a number.",
    "57": "Explain the concept of list comprehension in Python. Provide an example.",
    "58": "Write a Python program to find the sum of all prime numbers in a given range.",
    "59": "What is the purpose of the *args and **kwargs in Python functions?",
    "60": "Write a Python program to find the common characters between two strings.",
    "61": "Explain the purpose of the zip function in Python. Provide an example.",
    "62": "Write a Python program to find the GCD (Greatest Common Divisor) of two numbers.",
    "63": "What is a magic number? Write a Python function to check if a given number is a magic number.",
    "64": "Write a Python program to implement a stack.",
    "65": "Explain the purpose of the map function in Python. Provide an example.",
    "66": "Write a Python program to implement a queue.",
    "67": "Explain the purpose of the reduce function in Python. Provide an example.",
    "68": "Write a Python program to find the LCM (Least Common Multiple) of two numbers.",
    "69": "Explain the concept of a ternary operator in Python. Provide an example.",
    "70": "Write a Python program to implement a binary search algorithm.",
    "71": "Explain the purpose of the _str_ method in Python classes.",
    "72": "Write a Python program to find the factorial of a number using the math module.",
    "73": "What is the use of the _doc_ attribute in Python?",
    "74": "Write a Python program to implement a bubble sort algorithm.",
    "75": "Explain the purpose of the _dict_ attribute in Python classes.",
    "76": "Write a Python program to find the median of a list of numbers.",
    "77": "What is the purpose of the _slots_ attribute in Python classes?",
    "78": "Write a Python program to implement a merge sort algorithm.",
    "79": "Explain the purpose of the assert statement in Python. Provide an example.",
    "80": "Write a Python program to find the sum of a series: 1 + 1/2 + 1/3 + ... + 1/n.",
    "81": "Explain the purpose of the _new_ method in Python classes.",
    "82": "Write a Python program to implement a quicksort algorithm.",
    "83": "What is the purpose of the with statement in Python? Provide an example.",
    "84": "Write a Python program to find the ASCII value of a character.",
    "85": "Explain the purpose of the itertools module in Python. Provide an example.",
    "86": "Give examples for iterators, decorators, generators.",
    "87": "Write a Python program to find the intersection of two sets.",
    "88": "Write a Python program to check if a given year is a leap year or not.",
    "89": "Explain the purpose of the try, except, else, and finally blocks in Python exception handling.",
    "90": "Write a Python function to check if a string is an anagram or not.",
    "91": "What is the use of the any and all functions in Python? Provide examples.",
    "92": "Write a Python program to find the Fibonacci series up to n terms.",
    "93": "Explain the concept of a recursive function. Provide an example other than factorial.",
    "94": "Write a Python program to convert a decimal number to binary.",
    "95": "How does the sorted function work in Python? Provide an example.",
    "96": "Write a Python program to count the occurrences of each character in a string.",
    "97": "What is the purpose of the is and == operators in Python? Explain the difference.",
    "98": "Write a Python program to find the sum of natural numbers up to n using recursion.",
    "99": "Explain the purpose of the filter function in Python. Provide an example.",
    "100": "Write a Python program to implement a linear search algorithm.",
    "101": "How do you create a dictionary with default values in Python? Provide an example.",
    "102": "Write a Python program to implement a selection sort algorithm.",
    "103": "Explain the purpose of the _getitem_ and _setitem_ methods in Python classes."
  }
}
